package main

import (
	"fmt"
	"log"

	"github.com/ethereum/go-ethereum/common"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/ethclient"
)

func test_balance() {
	cli, err := ethclient.Dial("http://localhost:8545")
	if err != nil {
		log.Panic("failed to Dial:", err)
	}

	defer cli.Close()

	erc20, err := NewErc20(common.HexToAddress("0xf3dc0c38bece890315afdfe79b390d28198b8cc9"), cli)
	if err != nil {
		log.Panic("failed to NewErc20:", err)
	}

	data, err := erc20.BalanceOf(nil, common.HexToAddress("0xb96a1f071727692e09acd337c8273a39398c0c70"))
	if err != nil {
		log.Panic("failed to NewErc20:", err)
	}
	fmt.Println(data)
}

func test_transfer() {
	cli, err := ethclient.Dial("http://localhost:8545")
	if err != nil {
		log.Panic("failed to Dial:", err)
	}

	defer cli.Close()

	erc20, err := NewErc20(common.HexToAddress("0xf3dc0c38bece890315afdfe79b390d28198b8cc9"), cli)
	if err != nil {
		log.Panic("failed to NewErc20:", err)
	}

	//bind.n
	ï¼Ÿ
	data, err := erc20.Transfer(nil, common.HexToAddress("0xb96a1f071727692e09acd337c8273a39398c0c70"), nil)
	if err != nil {
		log.Panic("failed to NewErc20:", err)
	}
	fmt.Println(data)
}

func main() {
	fmt.Println("hello world")
	test_balance()
}
